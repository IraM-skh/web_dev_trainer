-- phpMyAdmin SQL Dump
-- version 5.1.2
-- https://www.phpmyadmin.net/
--
-- Хост: localhost:3306
-- Время создания: Апр 18 2024 г., 22:58
-- Версия сервера: 5.7.24
-- Версия PHP: 8.0.1

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `trainer`
--

-- --------------------------------------------------------

--
-- Структура таблицы `args`
--

CREATE TABLE `args` (
  `id` int(11) NOT NULL,
  `arg` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `args`
--

INSERT INTO `args` (`id`, `arg`) VALUES
(1, 'acc'),
(2, 'any'),
(3, 'arg for cb'),
(4, 'arr'),
(5, 'bool'),
(6, 'cb'),
(7, 'el'),
(8, 'error'),
(9, 'HTML el'),
(10, 'ind'),
(11, 'method'),
(12, 'msec'),
(13, 'no'),
(14, 'null'),
(15, 'num'),
(16, 'obj'),
(17, 'regExp'),
(18, 'str'),
(19, 'url');

-- --------------------------------------------------------

--
-- Структура таблицы `category`
--

CREATE TABLE `category` (
  `id` int(11) NOT NULL,
  `name` text NOT NULL,
  `id_section` int(11) NOT NULL,
  `output_ids` varchar(60) NOT NULL,
  `id_args` varchar(60) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `category`
--

INSERT INTO `category` (`id`, `name`, `id_section`, `output_ids`, `id_args`) VALUES
(1, 'Числа', 1, '7, 8, 15, 2, 16', '2, 13, 15, 18'),
(2, 'Массив', 1, '2, 6, 7, 8, 9, 16, 17', '1, 2, 3, 4, 6, 7, 10, 13, 15, 18'),
(3, 'Объект', 1, '2, 3, 7, 8, 16', '4, 5, 16, 18'),
(4, 'Строка', 1, '2, 7, 8, 15, 16', '10, 13, 15, 17, 18'),
(5, 'AJAX', 1, '4, 5, 6, 7, 13, 16', '2, 5, 6, 8, 11, 13, 14, 15, 16, 18, 19'),
(6, 'Таймеры', 1, '2, 3, 7, 8, 16', '6, 3, 12, 15'),
(7, 'Дата', 1, '1, 2, 7, 8, 16', '4, 5, 13, 15, 18'),
(8, 'DOM', 1, '3, 7, 8, 9, 10, 11, 12,15, 16', '5, 6, 9, 13, 15, 16, 18'),
(9, 'Set и Map', 1, '2, 8, 9, 14 ,16', '2, 4, 13, 18'),
(10, 'Функции', 1, '2, 3, 7, 8, 16', '2, 4, 13, 18'),
(11, 'LocalStorage', 1, '2, 3, 7, 8, 16', '2, 4, 10, 13, 18');

-- --------------------------------------------------------

--
-- Структура таблицы `outputvariant`
--

CREATE TABLE `outputvariant` (
  `id` int(11) NOT NULL,
  `type` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `outputvariant`
--

INSERT INTO `outputvariant` (`id`, `type`) VALUES
(1, 'дата'),
(2, 'массив'),
(3, 'объект'),
(4, 'объект Error'),
(5, 'объект XMLHttpRequest'),
(6, 'результирующее значание '),
(7, 'строка'),
(8, 'число'),
(9, 'any'),
(10, 'HTML el'),
(11, 'HTMLCollection'),
(12, 'NodeList'),
(13, 'promice'),
(14, 'set'),
(15, 'true/false'),
(16, 'undefiend');

-- --------------------------------------------------------

--
-- Структура таблицы `questions`
--

CREATE TABLE `questions` (
  `id_section` int(11) NOT NULL,
  `question` text NOT NULL,
  `ansvers_type` text NOT NULL,
  `id` int(11) NOT NULL,
  `questionName` varchar(60) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `questions`
--

INSERT INTO `questions` (`id_section`, `question`, `ansvers_type`, `id`, `questionName`) VALUES
(1, 'Выберите правильное определение:', 'radio', 1, 'description'),
(1, 'Какие аргументы можно передавать?', 'checkbox', 2, 'args'),
(1, 'Меняются ли исходные данные?', 'radio', 3, 'changeData'),
(1, 'Что возвращается', 'radio', 4, 'outputVariant');

-- --------------------------------------------------------

--
-- Структура таблицы `subject`
--

CREATE TABLE `subject` (
  `id` int(11) NOT NULL,
  `name` text NOT NULL,
  `id_category` int(11) NOT NULL,
  `id_args` varchar(60) NOT NULL,
  `true_description` text NOT NULL,
  `false_description_1` text NOT NULL,
  `false_description_2` text NOT NULL,
  `change_start_data` text NOT NULL,
  `id_outputVariant` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `subject`
--

INSERT INTO `subject` (`id`, `name`, `id_category`, `id_args`, `true_description`, `false_description_1`, `false_description_2`, `change_start_data`, `id_outputVariant`) VALUES
(1, 'Number', 1, '2', 'Перевод значения в число. Если значение не может быть приведено к числу, возвращается NaN.', 'Перевод только строковых значений в число. Если значение не может быть приведено к числу, возвращается NaN.', 'Перевод только строковых и булевых значений в число. Если значение не может быть приведено к числу, возвращается NaN.', 'Нет', 8),
(2, 'parseInt', 1, '18, 15', 'Перевод значения в целое число. Дробная часть отбрасывается без округляния в большую сторону. Можно указать систему счисления, в которой указано число для перевода. Если значение не может быть приведено к числу, возвращается NaN.', 'Перевод значения в число. Дробное число переводится так же, как и указано изначально. Если значение не может быть приведено к числу, возвращается NaN. ', 'Перевод значения в целое число. Дробная частьокругляется по общему математическому правилу. Можно указать систему счисления, в которой указано число для перевода. Если значение не может быть приведено к числу, возвращается NaN. ', 'Нет', 8),
(3, 'parseFloat', 1, '18', 'Перевод значения в число. Дробное число переводится так же, как и указано изначально. Если значение не может быть приведено к числу, возвращается NaN.', 'Перевод значения в целое число. Дробная часть округляется по общему математическому правилу. Можно указать систему счисления, в которой указано число для перевода. Если значение не может быть приведено к числу, возвращается NaN.', 'Перевод строковых и булевых значений в число. Дробное число переводится так же, как и указано изначально. Если значение не может быть приведено к числу, возвращается NaN.', 'Нет', 8),
(4, 'isNaN', 1, '2', 'Проверяет, является ли аргумент значением, которое нельзя привести к числу. Возвращает true, если значение является NaN, false, если значение можно привести к числу. ', 'Проверяет, является ли аргумент значением, которое нельзя привести к числу. Возвращает true, если значение можно привести к числу, false, если значение является NaN. ', 'Проверяет, является ли значение числом. ', 'Нет', 15),
(5, 'isFinite', 1, '2', 'Проверяет, является ли аргумент конечным числом. Если аргумент нельльзя привести к числу, является положительной или отрицательной бесконечностью, метод вернёт false; иначе возвращается true.', 'Проверяет, является ли аргумент конечным числом. Если аргумент является положительной или отрицательной бесконечностью, не является числом метод вернёт false; иначе возвращается true.', 'Проверяет, является ли аргумент конечным числом, приэтом, если его нельльзя привести к числу вернет NaN.  Если аргумент является положительной или отрицательной бесконечностью, метод вернёт false; иначе возвращается true.', 'Нет', 15),
(6, 'Math.sqrt', 1, '15', 'Извлечение корня из числа. При указании отрицательного числа или неприводимого к числу значения возвращает NaN.', 'Возведение числа в квадрат. Аргумент принимает только числа, указание других типов приводит к возвращению NaN.', 'Извлечение корня из числа. Аргумент принимает только числа, указание других типов приводит к возвращению NaN.', 'Нет', 8),
(7, 'Math.pow', 1, '15', 'Возведение в степень. Первый аргумент - основание, второй аргумент - степень. При указании неприводимого к числу значения возвращает NaN.', 'Возведение в степень. Первый аргумент - степень, второй аргумент - основание. При указании неприводимого к числу значения возвращает NaN.', 'Возведение в степень. Первый аргумент - степень, второй аргумент - основание. Аргумент принимает только числа, указание других типов приводит к возвращению NaN.', 'Нет', 8),
(8, 'Math.max', 1, '15', 'Возвращает наибольшее число из последовательности. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает наибольшее число из последовательности или массива. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает наибольшее число из последовательности или массива. Аргумент принимает только числа, указание других типов приводит к возвращению NaN.', 'Нет', 8),
(9, 'Math.min', 1, '15', 'Возвращает наименьшее число из последовательности. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает наименьшее число из последовательности или массива. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает наименьшее число из последовательности или массива. Аргумент принимает только числа, указание других типов приводит к возвращению NaN.', 'Нет', 8),
(10, 'Math.PI', 1, '13', 'Возвращает число pi', 'Возвращает число pi, ограниченное двумя знаками после заятой', 'Возвращает число pi. Принимает аргумент- количество знаков после запятой. ', 'Нет', 8),
(11, 'Math.random', 1, '13', 'Возвращает рандомное дробное число от 0 до 1(не включая 1). ', 'Возвращает рандомное дробное число. В аргументах указывается диапазон чисел. ', 'Возвращает рандомное дробное число от 0 до 1(включительно). ', 'Нет', 8),
(12, 'Math.trunc', 1, '15', 'Возвращает целую часть числа, просто отсекая дробную часть. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, округляю по общмену математическому правилу. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, округляю по общмену математическому правилу. Аргумент принимает только числа, указание других типов приводит к возвращению NaN.', 'Нет', 8),
(13, 'Math.round', 1, '15', 'Возвращает целую часть числа, округляю по общмену математическому правилу. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, просто отсекая дробную часть. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, округляю по общмену математическому правилу. Аргумент принимает только числа, указание других типов приводит к возвращению NaN.', 'Нет', 8),
(14, 'Math.ciel', 1, '15', 'Возвращает целую часть числа, округляя в большую сторону. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, округляю по общмену математическому правилу. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, просто отсекая дробную часть. При указании неприводимого к числу значения возвращает NaN.', 'Нет', 8),
(15, 'Math.floor', 1, '15', 'Возвращает целую часть числа, округляя в меньшую сторону. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, округляю по общмену математическому правилу. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает целую часть числа, просто отсекая дробную часть. При указании неприводимого к числу значения возвращает NaN.', 'Нет', 8),
(16, 'Math.abs', 1, '15', 'Возвращает модуль числа. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает модуль числа. При указании неприводимого к числу значения возвращает NaN.', 'Возвращает модуль числа в виде строки. При указании неприводимого к числу значения возвращает NaN.', 'Нет', 8),
(17, 'toFixed', 1, '15', 'Округление до заданного количества знаков после запятой. Возвращает строку. При указании неприводимого к числу значения просто обрезает дробную часть.', 'Округление до заданного количества знаков после запятой. Возвращает строку. При указании неприводимого к числу значения возвращает NaN.', 'Округление до заданного количества знаков после запятой. Возвращает число. При указании неприводимого к числу значения возвращает NaN.', 'Нет', 7),
(18, 'length(arr)', 2, '13', 'Возвращает количество элементов в массиве. ', 'Возвращает индекс последнего элемента массива.', 'Возвращает количество элементов в массиве в виде строки.', 'Нет', 8),
(19, 'push(arr)', 2, '2', 'Добавление элемента в конец массива. Возвращает обновленное количество элементов в массиве. ', 'Добавление элемента в конец массива. Возвращает новый массив.', 'Добавление элемента в начало массива. Возвращает новый массив.', 'Да', 8),
(20, 'unshift', 2, '2', 'Добавление элемента в начало массива. Возвращает обновленное количество элементов в массиве. ', 'Добавление элемента в конец массива. Возвращает новое количество элементов в массиве. ', 'Добавление элемента в начало массива. Возвращает новый массив.', 'Да', 8),
(21, 'pop', 2, '13', 'Удаление последнего элемента из массива. Возвращает элемент, который был удален. ', 'Удаление первого элемента из массива. Возвращает элемент, который был удален. ', 'Удаление последнего элемента из массива. Возвращает обновленный массив.', 'Да', 9),
(22, 'shift', 2, '13', 'Удаление первого элемента из массива. Возвращает элемент, который был удален. ', 'Удаление последнего элемента из массива. Возвращает элемент, который был удален. ', 'Удаление первого элемента из массива. Возвращает обновленный массив.', 'Да', 9),
(23, 'splice', 2, '15, 10', 'Удаление элементов из массива. Первый аргумент- начальный индекс, второй- количество элементов для удаления. Возвращает удаленные элементы. ', 'Удаление элементов из массива. Первый аргумент- начальный индекс, второй- конечный индекс. Возвращает обновленный массив.', 'Копирование элементов из массива. Первый аргумент- начальный индекс, второй- конечный индекс. Возвращает обновленный массив.', 'Да', 2),
(24, 'reverse', 2, '13', 'Переворачивает массив задом-наперед. ', 'Заменяет симвалы в указанном индексном диапазоне, без указания диапазона заменит все символы. При указании только одного индекса, замена осуществится до конца массива.', 'Добавление элемента в начало массива. Возвращает новый массив.', 'Да', 2),
(25, 'sort', 2, '6', 'Сортирует элементы переводя из в строки, затем конвертирует обратно. Без указания аргументов будет сортировка по возврастанию. Если указана функция, сортировка будет проводится следующим образом: возвращен результат < 0 - 1 элемент идет первым; возвращен результат = 0 - элементы не переносятся относительно друг друга(могут переносится по отношению ко всем другим элементам); возвращен результат > 0 - 2 элемент идет первым.', 'Сортирует элементы переводя из в строки, затем конвертирует обратно. Указание функции-сортировщика объязательно. Если указана функция, сортировка будет проводится следующим образом: возвращен результат < 0 - 2 элемент идет первым; возвращен результат = 0 - элементы не переносятся относительно друг друга(могут переносится по отношению ко всем другим элементам); возвращен результат > 0 - 1 элемент идет первым.', 'Заменяет симвалы в указанном индексном диапазоне, без указания диапазона заменит все символы. При указании только одного индекса, замена осуществится до конца массива.', 'Да', 2),
(26, 'fill', 2, '2, 10', 'Заменяет симвалы в указанном индексном диапазоне, без указания диапазона заменит все символы. При указании только одного индекса, замена осуществится до конца массива.', 'Раскрывает вложеннось масиива до заданного уровня. ', 'Заменяет все символы массива на указнный. ', 'Да', 2),
(27, 'slice', 2, '10', 'Копирует элементы по индексному диапазону(последний индекс не включается). При указании только первого аргумента, массив будет скопирован от указанного индекса до конца массива. Без указания аргумента скопирует весь массив.', 'Удаление элементов из массива. Первый аргумент- начальный индекс, второй- количество элементов для удаления. ', 'Удаление элементов из массива. Первый аргумент- начальный индекс, второй- конечный индекс. Возвращает обновленный массив.', 'Нет', 2),
(28, 'concat', 2, '2', 'Добавляет в конец массива элменеты массива/элемент указанные в аргументе.', 'Сортирует элементы переводя из в строки, затем конвертирует обратно. Без указания аргументов будет сортировка по возврастанию. Если указана функция, сортировка будет проводится следующим образом: возвращен результат < 0 - 1 элемент идет первым; возвращен результат = 0 - элементы не переносятся относительно друг друга(могут переносится по отношению ко всем другим элементам); возвращен результат > 0 - 2 элемент идет первым.', 'Добавление элемента в начало массива. Возвращает новый массив.', 'Нет', 2),
(29, 'flat', 2, '15', 'Раскрывает вложеннось масиива до заданного уровня. ', 'Добавление элемента в начало массива. Возвращает новый массив.', 'Заменяет симвалы в указанном индексном диапазоне, без указания диапазона заменит все символы. При указании только одного индекса, замена осуществится до конца массива.', 'Нет', 2),
(30, 'flatMap', 2, '6, 3, 7, 10, 4', 'Поочередно использует методы flat() и map(). Раскрывает вложенность масиива только на 1 уровень.', 'Поочередно использует методы flat() и map(). Раскрывает вложенность масиива только на указанный в первом аргументе уровень.', 'Превращает массив в картеж Map, с ключами, соответсвующими индексам и значениями, соответсвующими элементам.', 'Нет', 2),
(31, 'map', 2, '6, 3, 7, 10, 4', 'Производит с каждым элементом действия из переданной функции. В функции можно манипулировать элементом, индексом и самим массивом. Возвращает обновленный массив.', 'Производит с каждым элементом действия из переданной функции. В функции можно манипулировать элементом, индексом и самим массивом. Возвращает массив до преобразования.', 'Превращает массив в картеж Map, с ключами, соответсвующими индексам и значениями, соответсвующими элементам.', 'Нет', 2),
(32, 'filter', 2, '6, 3, 7, 10, 4', 'Возвращает новый массив с элементами, удовлетворяющими условию. В передаваемой функции можно манипулировать элементом, индексом и самим массивом.  ', 'Сортирует элементы переводя из в строки, затем конвертирует обратно. Без указания аргументов будет сортировка по возврастанию. Если указана функция, сортировка будет проводится следующим образом: возвращен результат < 0 - 1 элемент идет первым; возвращен результат = 0 - элементы не переносятся относительно друг друга(могут переносится по отношению ко всем другим элементам); возвращен результат > 0 - 2 элемент идет первым.', 'Заменяет все символы массива на указнный. ', 'Нет', 2),
(33, 'indexOf', 2, '2', 'Возвращает первый индекс, по которому данный элемент может быть найден в массиве или -1, если такого индекса нет.', 'Провряет включает ли массив указанный элемент. Вторым аргументом можно указать индекс, без индекса будет проверен весь массив. ', 'Сортирует элементы переводя из в строки, затем конвертирует обратно. Указание функции-сортировщика объязательно. Если указана функция, сортировка будет проводится следующим образом: возвращен результат < 0 - 2 элемент идет первым; возвращен результат = 0 - элементы не переносятся относительно друг друга(могут переносится по отношению ко всем другим элементам); возвращен результат > 0 - 1 элемент идет первым.', 'Нет', 8),
(34, 'find', 2, '6, 3, 7, 10, 4', 'Вернет первый элемент, удовлетворяющий условию. В передаваемой функции можно манипулировать элементом, индексом и самим массивом. ', 'Возвращает новый массив с элементами, удовлетворяющими условию. В передаваемой функции можно манипулировать элементом, индексом и самим массивом.  ', 'Возвращает первый индекс, по которому данный элемент может быть найден в массиве или -1, если такого индекса нет.', 'Нет', 9),
(35, 'includes', 2, '2, 10', 'Провряет включает ли массив указанный элемент. Вторым аргументом можно указать индекс, без индекса будет проверен весь массив. ', 'Возвращает первый индекс, по которому данный элемент может быть найден в массиве или -1, если такого индекса нет.', 'Вернет первый элемент, удовлетворяющий условию. В передаваемой функции можно манипулировать элементом, индексом и самим массивом. ', 'Нет', 15),
(36, 'some', 2, '6, 3, 7, 10, 4', 'Проверяет, удовлетворяет ли условию хотябы один элемент в массиве. ', 'Проверяет, удовлетворяет ли условию все элементы в массиве. ', 'Возвращает новый массив с элементами, удовлетворяющими условию. В передаваемой функции можно манипулировать элементом, индексом и самим массивом.  ', 'Нет', 15),
(37, 'every', 2, '6, 3, 7, 10, 4', 'Проверяет, удовлетворяет ли условию все элементы в массиве. ', 'Проверяет, удовлетворяет ли условию хотябы один элемент в массиве. ', 'Копирует элементы по индексному диапазону(последний индекс не включается). При указании только первого аргумента, массив будет скопирован от указанного индекса до конца массива. Без указания аргумента скопирует весь массив.', 'Нет', 15),
(38, 'join', 2, '18', 'Переводит массив в строку, соединив все элементы указанным символом.', 'Заменяет симвалы в указанном индексном диапазоне, без указания диапазона заменит все символы. При указании только одного индекса, замена осуществится до конца массива.', 'Провряет включает ли массив указанный элемент. Вторым аргументом можно указать индекс, без индекса будет проверен весь массив. ', 'Нет', 7),
(39, 'reduce', 2, '6, 3, 7, 10, 4, 1', 'Сокращает все элементы массива до одного значения. ', 'Возвращает новый массив с элементами, удовлетворяющими условию. В передаваемой функции можно манипулировать элементом, индексом и самим массивом.  ', 'Добавление элемента в начало массива. Возвращает новый массив.', 'Нет', 6),
(40, 'forEach', 2, '6, 3, 7, 10, 4', 'Производит с каждым элементом действия из переданной функции. В функции можно манипулировать элементом, индексом и самим массивом. Сохраняет значения в переменной, называющейся аккамуляторм. ', 'Провряет включает ли массив указанный элемент. Вторым аргументом можно указать индекс, без индекса будет проверен весь массив. ', 'Раскрывает вложеннось масиива до заданного уровня. ', 'Нет', 16),
(41, 'Object.assign', 3, '16', 'Скопирует первый уровень объекта. Объекты внутри скопируются ссылками.', 'Скопирует первый уровень объекта. Объекты внутри скопируются по значениям.', 'Блокирует объект для добавления или удаления пары ключ-значение. Уже созданные пары можно редактировать по значению.', 'Нет', 3),
(42, 'Object.keys', 3, '16', 'Вернет значение ключей. ', 'Вернет значение по заданному ключу.', 'Вернет пары ключ-значение.', 'Нет', 2),
(43, 'Object.values', 3, '16', 'Вернет значениея из пары ключ-значене. ', 'Вернет пары ключ-значение.', 'Вернет значение по заданному ключу.', 'Нет', 2),
(44, 'Object.entries', 3, '16', 'Вернет пары ключ-значение.', 'Вернет количество пар ключ-значение.', 'Вернет значение ключей. ', 'Нет', 2),
(45, 'Object.freeze', 3, '16', 'Блокирует объект для добавления или удаления пары ключ-значение. Уже созданные пары можно редактировать по значению.', 'Блокирует объект для добавления или удаления пары ключ-значение. Уже созданные пары редактировать нельзя.', 'Скопирует объет. Пары ключ-объект копируются сслками, а не значениями.', 'Нет', 3),
(46, 'length(str)', 4, '13', 'Количество символов строке.', 'Обрезает строку до указанного индекса.', 'Обрезает строку в индексном интервале.', 'Нет', 8),
(47, 'concat', 4, '18', 'Конкотенация строк, можно указать две и более строки.', 'Конкотенация строк, можно указать только 2 строки. ', 'Количество символов строке.', 'Нет', 7),
(48, 'toLowerCase', 4, '13', 'Преобразование строки в нижний регистр.', 'Преобразование строки в верхний регистр.', 'Оставляет в строке только символы нижнего регистра.', 'Нет', 7),
(49, 'toUpperCase', 4, '13', 'Преобразование строки в верхний регистр.', 'Преобразование строки в нижний регистр.', 'Оставляет в строке только символы верхнего регистра.', 'Нет', 7),
(50, 'indexOf', 4, '18, 10', 'Индекс первого встретевшегося символа или набора символов. Можно указать индекс, откуда вести поиск. ', 'Индекс позиция первого встретевшегося символа или набора символов. Только 1 аргумент- строка. ', 'Возвращает символ по заданному индексу. ', 'Нет', 8),
(51, 'lastIndexOf', 4, '18, 10', 'Индекс последнего встретевшегося символа или набора символов. Можно указать индекс, откуда вести поиск. ', 'Индекс позиция последнего встретевшегося символа или набора символов. Только 1 аргумент- строка. ', 'Возвращает символ по заданному индексу. ', 'Нет', 8),
(52, 'charAt', 4, '10', 'Возвращает символ по заданному индексу. ', 'Индекс первого встретевшегося символа или набора символов. Можно указать индекс, откуда вести поиск. ', 'Индекс позиция последнего встретевшегося символа или набора символов. Только 1 аргумент- строка. ', 'Нет', 7),
(53, 'substring', 4, '10', 'Копирует символы в индексном диапазоне. При указании только одного аргумента проверка будет произведена от начала указанного индекса до конца строки.', 'Копирует символы. Первый аргумент- с какого индекса начинать копирование, второй- количество символов. ', 'Разделяет строку по указанным символам, сам символ не передается в результирующее значение. Разделенные значения формируются в массив. ', 'Нет', 7),
(54, 'slice(str)', 4, '10', 'Копирует символы в индексном диапазоне. При указании только одного аргумента проверка будет произведена от начала указанного индекса до конца строки.', 'Копирует символы. Первый аргумент- с какого индекса начинать копирование, второй- количество символов. ', 'Разделяет строку по указанным символам, сам символ не передается в результирующее значение. Разделенные значения формируются в массив. ', 'Нет', 7),
(55, 'split', 4, '18', 'Разделяет строку по указанным символам, сам символ не передается в результирующее значение. Разделенные значения формируются в массив. ', 'Копирует символы в индексном диапазоне. При указании только одного аргумента проверка будет произведена от начала указанного индекса до конца строки.', 'Копирует символы. Первый аргумент- с какого индекса начинать копирование, второй- количество символов. ', 'Нет', 2),
(56, 'replace', 4, '17, 18', 'Заменяет первый символ/набор символов на второй. Без дополнительных условий заменяет только первый встреченный символ/набор символов. ', 'Заменяет первый символ/набор символов на второй. Заменяет все втреченные символы/наборы символов.', 'Повторяет указанной символ/набор символов на заданном индексе. ', 'Нет', 7),
(57, 'replaceAll', 4, '17, 18', 'Заменяет первый символ/набор символов на второй. Заменяет все втреченные символы/наборы символов.', 'Заменяет первый символ/набор символов на второй. Без дополнительных условий заменяет только первый встреченный символ/набор символов. ', 'Повторяет строку заданное количество раз. ', 'Нет', 7),
(58, 'includes', 4, '18, 10', 'Проверяет, содержит ли строка указанный символ/набор символов. Можно указать индекс, по которому будет проводится проверка. ', 'Возвращает символ по заданному индексу. ', 'Индекс первого встретевшегося символа или набора символов. Можно указать индекс, откуда вести поиск. ', 'Нет', 15),
(59, 'startsWith', 4, '18, 10 ', 'Определяет, начинается ли строка с указанных символа/набора символов.', 'Удлиняет строку до заданного количества символов. Можно указать, какими символами заполнить добавочные символы(по умолчанию- пробел), символы добавляются в начало строки. Если указанное значение менше, чем длинны строки, текущая строка будет возвращена без изменений.', 'Удаляет пробелы с начала строки.', 'Нет', 15),
(60, 'endsWith', 4, '18, 10', 'Определяет, заканчивается ли строка с указанных символа/набора символов.', 'Удлиняет строку до заданного количества символов. Можно указать, какими символами заполнить добавочные символы(по умолчанию- пробел), символы добавляются в конец строки. Если указанное значение менше, чем длинны строки, текущая строка будет возвращена без изменений.', 'Удаляет пробелы с конца строки.', 'Нет', 15),
(61, 'trim', 4, '13', 'Удаляет пробелы с начала и конца строки', 'Копирует символы в индексном диапазоне. При указании только одного аргумента проверка будет произведена от начала указанного индекса до конца строки.', 'Возвращает символ по заданному индексу. ', 'Нет', 7),
(62, 'padStart', 4, '15, 18', 'Удлиняет строку до заданного количества символов. Можно указать, какими символами заполнить добавочные символы(по умолчанию- пробел), символы добавляются в начало строки. Если указанное значение менше, чем длинны строки, текущая строка будет возвращена без изменений.', 'Удлиняет строку до заданного количества символов. Можно указать, какими символами заполнить добавочные символы(по умолчанию- пробел), символы добавляются в начало строки. Если указанное значение менше, строка будет обрезана с конца. ', 'Удаляет пробелы с начала строки.', 'Нет', 7),
(63, 'padEnd', 4, '15, 18', 'Удлиняет строку до заданного количества символов. Можно указать, какими символами заполнить добавочные символы(по умолчанию- пробел), символы добавляются в конец строки. Если указанное значение менше, чем длинны строки, текущая строка будет возвращена без изменений.', 'Удлиняет строку до заданного количества символов. Можно указать, какими символами заполнить добавочные символы(по умолчанию- пробел), символы добавляются в конец строки. Если указанное значение менше, строка будет обрезана с конца. ', 'Удаляет пробелы с конца строки.', 'Нет', 7),
(64, 'repeat', 4, '15', 'Повторяет строку заданное количество раз. ', 'Повторяет указанной символ/набор символов на заданном индексе. ', 'Заменяет первый символ/набор символов на второй. Без дополнительных условий заменяет только первый встреченный символ/набор символов. ', 'Нет', 7),
(65, 'JSON.stringify', 5, '2, 6', 'Преобразовывет значение в формат JSON-строки. Вторым аргументом можно указать функцию, которая преобразует значения и свойства по ходу их конвертации в строку, либо массив, он определяет набор свойств, включаемых в объект в окончательной строке. Можно указать третьим аргументом форматирование пробелами для улучшения читаемости. ', 'Разбирает строку JSON, возможно с преобразованием получаемого в процессе разбора значения.', 'Отправка запроса не сервер. В аргументах объязательно должно быть указан тело запроса. ', 'Нет', 7),
(66, 'JSON.parse', 5, '18', 'Разбирает строку JSON, возможно с преобразованием получаемого в процессе разбора значения.', 'Преобразовывет значение в формат JSON-строки. Вторым аргументом можно указать функцию, которая преобразует значения и свойства по ходу их конвертации в строку, либо массив, он определяет набор свойств, включаемых в объект в окончательной строке. Можно указать третьим аргументом форматирование пробелами для улучшения читаемости. ', 'Отправка запроса не сервер. В аргументах объязательно должно быть указан тело запроса. ', 'Нет', 6),
(67, 'new XMLHttpRequest()', 5, '13', 'Создает объект, который даёт возможность делать HTTP-запросы к серверу без перезагрузки страницы.', 'Настройка конфигурации и подготовка запроса к отправка на сервер.', 'Отправка запроса не сервер. Аргемнт необъязательный, в нем указывается тело запроса. ', 'Нет', 5),
(68, 'XMLHttpRequest.open', 5, '11, 19, 5, 18', 'Настройка конфигурации и подготовка запроса к отправка на сервер.', 'Открытие соединения с сервером.', 'Инициализация запроса и его отправка на сервер.', 'Нет', 16),
(69, 'XMLHttpRequest.send', 5, '18, 14', 'Отправка запроса не сервер. Аргемнт необъязательный, в нем указывается тело запроса. ', 'Отправка запроса не сервер. В аргументах объязательно должно быть указан тело запроса. ', 'Возвращает текст ответа от сервера на отправленный запрос', 'Нет', 16),
(70, 'XMLHttpRequest.responseText', 5, '13', 'Возвращает текст ответа от сервера на отправленный запрос', 'Настройка конфигурации и подготовка запроса к отправка на сервер.', 'Отправка запроса не сервер. Аргемнт необъязательный, в нем указывается тело запроса. ', 'Нет', 7),
(71, 'new Promise()', 5, '6', 'Создает объект-контейнер для асинхронно доставленного значения. Функция-executor объязательна для указания, она выполяет асинхронную операцию и переводит промис в решенное стосояние(успешно выполнен или отклонен).', 'Создает новый объект, в аргументах ничего не передается. ', 'Создает объект, который даёт возможность делать HTTP-запросы к серверу без перезагрузки страницы.', 'Нет', 13),
(72, 'fetch', 5, '16, 19', 'Запускает процесс извлечения ресурса из сети. Возвращает promise, содержащий ответ на запрос. Можно указать опции с пользовательскими настройки, которые применяются к запросу.', 'Создает объект-контейнер для асинхронно доставленного значения. Функция-executor объязательна для указания, она выполяет асинхронную операцию и переводит промис в решенное стосояние(успешно выполнен или отклонен).', 'Отправка запроса не сервер. Аргемнт необъязательный, в нем указывается тело запроса. ', 'Нет', 13),
(73, 'then', 5, '6', 'Обрабатывает результат после решения промиса, выполняет действия, в зависимоти от тогоуспешно решен промис или отклонен.', 'Обрабатывает ошибки при выполнении асинхронной операции. Функция-колбэк, которая будет вызвана при переходе промиса в состояние отклонен. Функция имеет один параметр, в который передаётся информация об ошибке', 'Возвращает объект Promise, который был отклонен по указанной причине', 'Нет', 13),
(74, 'response.json', 5, '13', 'Декодирует ответ в JSON формат ', 'Разбирает строку JSON, возможно с преобразованием получаемого в процессе разбора значения.', 'Преобразовывет значение в формат JSON-строки. Вторым аргументом можно указать функцию, которая преобразует значения и свойства по ходу их конвертации в строку, либо массив, он определяет набор свойств, включаемых в объект в окончательной строке. Можно указать третьим аргументом форматирование пробелами для улучшения читаемости. ', 'Нет', 13),
(75, 'resolve', 5, '2', 'Возвращает выполненный promise  с переданным значением.', 'Декодирует ответ в JSON формат ', 'Отправка запроса не сервер. В аргументах объязательно должно быть указан тело запроса. ', 'Нет', 13),
(76, 'reject', 5, '8', 'Возвращает объект promise, который был отклонен по указанной причине', 'Отправка запроса не сервер. В аргументах объязательно должно быть указан тело запроса. ', 'Разбирает строку JSON, возможно с преобразованием получаемого в процессе разбора значения.', 'Нет', 13),
(77, 'catch', 5, '6', 'Обрабатывает ошибки при выполнении асинхронной операции. Функция-колбэк, которая будет вызвана при переходе промиса в состояние отклонен. Функция имеет один параметр, в который передаётся информация об ошибке', 'Обрабатывает результат после решения промиса, выполняет действия, в зависимоти от тогоуспешно решен промис или отклонен.', 'Возвращает объект promise, который был отклонен по указанной причине', 'Нет', 13),
(78, 'finally', 5, '6', 'Вызывает функцию, при выполнении промиса (успешно решен или отклонен)', 'Обрабатывает ошибки при выполнении асинхронной операции. Функция-колбэк, которая будет вызвана при переходе промиса в состояние отклонен. Функция имеет один параметр, в который передаётся информация об ошибке', 'Обрабатывает результат после решения промиса, выполняет действия, в зависимоти от тогоуспешно решен промис или отклонен.', 'Нет', 13),
(79, 'Error', 5, '18, 16, 15', 'Создание нового Error объекта. Можно передавать краткое описание ошибки, более подробное описание в виде объекта, путь в кайлу, который вызвал ошибку и номер строки, в которой возникла ошибка, отраженный в lineNumber свойстве.', 'Обрабатывает ошибки при выполнении асинхронной операции. Функция-колбэк, которая будет вызвана при переходе промиса в состояние отклонен. Функция имеет один параметр, в который передаётся информация об ошибке', 'Возвращает объект promise, который был отклонен по указанной причине', 'Нет', 4),
(80, 'setTimeout', 6, '6, 3, 12', 'Устанавливает таймер на заданное количество миллисекунд. Таймер единожны выполняет переданную функцию. Аргументы для коллбэка передаются через setTimeout.', 'Устанавливает таймер на заданное количество миллисекунд. Коллбэк вызывается каждй раз при окончании таймера. По окончании таймер обнуляется и отсчет начинается заново. Аргументы для коллбэка передаются через setTimeout.', 'Удаляет стандартный таймер по ид таймера.', 'нет', 8),
(81, 'clearTimeout', 6, '15', 'Удаляет стандартный таймер по ид таймера.', 'Удаляет все стандартные таймеры.', 'Удаляет интервальный таймер по ид таймера.', 'нет', 16),
(82, 'setInterval', 6, '6, 3, 12', 'Устанавливает таймер на заданное количество миллисекунд. Коллбэк вызывается каждй раз при окончании таймера. По окончании таймер обнуляется и отсчет начинается заново. Аргументы для коллбэка передаются через setInterval.', 'Устанавливает таймер на заданное количество миллисекунд. Таймер единожны выполняет переданную функцию. Аргументы для коллбэка передаются через setInterval.', 'Удаляет интервальный таймер по ид таймера.', 'нет', 8),
(83, 'clearInterval', 6, '15', 'Удаляет интервальный таймер по ид таймера.', 'Удаляет все интеравльные таймеры.', 'Удаляет стандартный таймер по ид таймера.', 'нет', 16),
(84, 'new Date()', 7, '15, 18', 'Создает объект-дату. Без указания аргумента создает объект с теущей датой и временем. Можно передать количество миллисекунд, прошедших с 1 января 1970 года UTC+0, либо строку с датой. ', 'Создает объект-дату с теущей датой и временем. Аргументы не предусмотрены. ', 'Создает объект-дату. Год, месяц, день и т.д. передаются через запятую. От года до миллисекунд.', 'Нет', 1),
(85, 'getFullYear', 7, '13', 'Выдаст год из даты.', 'Выдаст год и месяц из даты.', 'Устанавливает год. Можно так же усановить месяц и день. ', 'Нет', 8),
(86, 'getMonth', 7, '13', 'Выдаст порядковый номер месяця из даты, где 0- январь.', '1Выдаст порядковый номер месяця из даты, где 1- январь.', 'Устанавливает месяц. Можно так же установить день.', 'Нет', 8),
(87, 'getDate', 7, '13', 'Выдаст день месяца.', 'Выдаст прорядковый номер дня недели, где 0 соответсвует вс.', 'Выдаст прорядковый номер дня недели, где 0 соответсвует пн.', 'Нет', 8),
(88, 'getDay', 7, '13', 'Выдаст прорядковый номер дня недели, где 0 соответсвует вс.', 'Выдаст прорядковый номер дня недели, где 0 соответсвует пн.', 'Устанавливает день. ', 'Нет', 8),
(89, 'getHours', 7, '13', 'Выдаст часы из времени.', 'Выдаст часы в формате 11 a.m.', 'Устанавливает час. Можно так же установаить минуты, секунды и миллисекунды.', 'Нет', 8),
(90, 'getMinutes', 7, '13', 'Выдаст минуты из времени.', 'Выдаст миллисекунды.', 'Устанавливает минуты. Можно так же установаить секунды и миллисекунды.', 'Нет', 8),
(91, 'getSeconds', 7, '13', 'Выдаст секунды из времени.', 'Выдаст время в формате 11:11:11 a.m.', 'Устанавливает секунды. Можно так же установаить миллисекунды.', 'Нет', 8),
(92, 'toISOString', 7, '13', 'Выдаст строку с датой в  ISO формате.', 'Выдаст строку с датой в JSON формате.', 'Выдаст время в формате 11:11:11 a.m.', 'Нет', 7),
(93, 'getTime', 7, '13', 'Миллисекунды, прошедшие с прошедшие с 1 января 1970 года UTC+0.', 'Создает объект-дату. Без указания аргумента создает объект с теущей датой и временем. Можно передать количество миллисекунд, прошедших с 1 января 1970 года UTC+0, либо строку с датой. ', 'Миллисекунды, прошедшие от даты, к которой вызван метод, до даты, которая указана в аргументе.', 'Нет', 8),
(94, 'setFullYear', 7, '15', 'Устанавливает год. Можно так же усановить месяц и день. ', 'Выдаст год из даты.', 'Устанавливает всю дату заново. Можно передать количество миллисекунд, прошедших с 1 января 1970 года UTC+0, либо строку с датой. ', 'Да', 8),
(95, 'setMonth', 7, '15', 'Устанавливает месяц. Можно так же установить день ,где 0- январь.', 'Выдаст порядковый номер месяця из даты, где 0- январь.', 'Устанавливает месяц. Можно так же установить день ,где 1- январь.', 'Да', 8),
(96, 'setDate', 7, '15', 'Устанавливает день. ', 'Устанавливает всю дату заново. Без указания аргумента обновление будет с теущей датой и временем. Можно передать количество миллисекунд, прошедших с 1 января 1970 года UTC+0, либо строку с датой. ', 'Устанавливает всю дату заново. Можно передать количество миллисекунд, прошедших с 1 января 1970 года UTC+0, либо строку с датой. ', 'Да', 8),
(97, 'setHours', 7, '15', 'Устанавливает час. Можно так же установаить минуты, секунды и миллисекунды.', 'Выдаст часы из времени.', 'Устанавливает только час. ', 'Да', 8),
(98, 'setMinutes', 7, '15', 'Устанавливает минуты. Можно так же установаить секунды и миллисекунды.', 'Выдаст минуты из времени.', 'Устанавливает только минуты. ', 'Да', 8),
(99, 'setSeconds', 7, '15', 'Устанавливает секунды. Можно так же установаить миллисекунды.', 'Выдаст секунды из времени.', 'Устанавливает только секунды. ', 'Да', 8),
(100, 'querySelector', 8, '18', 'Возвращает первый HTML элемент, который соответствует указанному селектору или группе селекторов. Если совпадений не найдено, возвращает значение null.', 'Возвращает все найденные элементы документа, которые соответствуют указанному селектору.', 'Возвращает значение указанного атрибута элемента. Если элемент не содержит данный атрибут, могут быть возвращены null или пустая строка', 'Нет', 10),
(101, 'querySelectorAll', 8, '18', 'Возвращает все найденные элементы документа, которые соответствуют указанному селектору.', 'Возвращает первый HTML элемент, который соответствует указанному селектору или группе селекторов. Если совпадений не найдено, возвращает значение null.', 'Предоставляет все значения CSS-свойств элементов после применения текущей таблицы стилей или базового расчёта каких-либо значений, которые могут быть.', 'Нет', 12),
(102, 'classList.remove', 8, '18', 'Удалить указанные класс/классы. ', 'Удалить класс, если он уже есть, либо добавить, если такого класса нет. ', 'Проверка наличилия указанного класса ', 'Да', 16),
(103, 'classList.add', 8, '18', 'Добавить указанные класс/классы. ', 'Удалить класс, если он уже есть, либо добавить, если такого класса нет. ', 'Проверка наличилия указанного класса ', 'Да', 16),
(104, 'classList.toggle', 8, '18', 'Удалить класс, если он уже есть, либо добавить, если такого класса нет. ', 'Добавить указанные класс/классы. ', 'Проверка наличилия указанного класса ', 'Да', 15),
(105, 'addEventListener', 8, '18, 6, 5', 'Регистрирует обработчик события. Обработчик срабатывает при указанном событии на прикрепленном элементе или его элементах-детях. ', 'Удаляет обработчик события с элемента. Первый аргумент - тип события, второй- функция-обработчик, третий - объект с настройками ', 'Прекращает дальнейшую передачу текущего события. На текущем элементе все обработчики будут вызваны.', 'Нет', 16),
(106, 'cloneNode', 8, '5', 'Возвращает дубликат узла, из которого этот метод был вызван', 'Возвращает дубликат узла, который указывается в аргументе', 'Копирует только элемент, не включая родительские элементы.', 'Нет', 10),
(107, 'removeEventListener', 8, '18, 16, 6', 'Удаляет обработчик события с элемента. Первый аргумент - тип события, второй- функция-обработчик, третий - объект с настройками ', 'Регистрирует обработчик события. Обработчик срабатывает при указанном событии на прикрепленном элементе или его элементах-детях. ', 'Прекращает дальнейшую передачу текущего события. На текущем элементе все обработчики будут вызваны.', 'Нет', 16),
(108, 'Event.target', 8, '13', 'Указывает на элемент, который был непосредственным инициатором события, даже если обработчик событий был установлен на его родителя. ', 'Указывает на элемент, к которому был присоединен обработчик события', 'Регистрирует обработчик события. Обработчик срабатывает при указанном событии на прикрепленном элементе или его элементах-детях. ', 'Нет', 10),
(109, 'Event.currentTarget', 8, '13', 'Указывает на элемент, к которому был присоединен обработчик события', 'Указывает на элемент, который был непосредственным инициатором события, даже если обработчик событий был установлен на его родителя. ', 'Регистрирует обработчик события. Обработчик срабатывает при указанном событии на прикрепленном элементе или его элементах-детях. ', 'Нет', 10),
(110, 'stopPropagation', 8, '13', 'Прекращает дальнейшую передачу текущего события. На текущем элементе все обработчики будут вызваны.', 'Отмена поведения действия события по умолчанию', 'Прекращение дальнейшего выполнения функции.', 'Нет', 16),
(111, 'preventDefault', 8, '13', 'Отмена поведения действия события по умолчанию', 'Прекращает дальнейшую передачу текущего события. На текущем элементе все обработчики будут вызваны.', 'Прекращение дальнейшего выполнения функции.', 'Нет', 16),
(112, 'append', 8, '9', 'Добавление элемента в конец родительского элеметна.', 'Добавление элемента в начало родительского элемента.', 'Добавление элемента перед другим элементом, к которому вызван метод', 'Да', 16),
(113, 'prepend', 8, '9', 'Добавление элемента в начало родительского элемента.', 'Добавление элемента в конец родительского элеметна.', 'Добавление элемента после другого элемента, к которому вызван метод', 'Да', 16),
(114, 'before', 8, '9', 'Добавление элемента перед другим элементом, к которому вызван метод', 'Добавление элемента в конец родительского элеметна.', 'Добавление элемента в начало родительского элемента.', 'Да', 16),
(115, 'after', 8, '9', 'Добавление элемента после другого элемента, к которому вызван метод', 'Добавление элемента в начало родительского элемента.', 'Добавление элемента в конец родительского элеметна.', 'Да', 16),
(116, 'insertAdjacentHTML', 8, '18', 'Добавление элемента относительно другого, к которому вызван метод. Первым аргументом указывается порядок добавления. Вторым- элемент в виде строки. ', 'Создание элемента, при этом он не добавляется в верстку.  ', 'Возвращает текстовое значение элемента ', 'Да', 16),
(117, 'createElement', 8, '18, 16', 'Создание элемента, при этом он не добавляется в верстку.  ', 'Добавление элемента относительно другого, к которому вызван метод. Первым аргументом указывается порядок добавления. Вторым- элемент в виде строки. ', 'возвращает значение указанного атрибута элемента. Если элемент не содержит данный атрибут, могут быть возвращены null или пустая строка', 'Да', 10),
(118, 'textContent', 8, '13', 'Возвращает текстовое значение элемента ', 'Возвращает NodeList дочерних элементов. Возвращаются не только элементы, но и комментарии, и текст.', 'Добавление элемента относительно другого, к которому вызван метод. Первым аргументом указывается порядок добавления. Вторым- элемент в виде строки. ', 'Да', 7),
(119, 'getAttribute', 8, '18', 'Возвращает значение указанного атрибута элемента. Если элемент не содержит данный атрибут, могут быть возвращены null или пустая строка', 'Возвращает текстовое значение элемента ', 'Создание элемента, при этом он не добавляется в верстку.  ', 'Да', 7),
(120, 'scrollIntoView', 8, '5, 16', 'Прокрутка окна до элемента, к которому вызван метод. Можно указать до какой границы элемента необходима прокрутка, а так же настроить анимацию прокрутки и выравнивание. ', 'Прокрутка документа до указанных координат. Координаты указываются в пикселях, можно настроить анимацию прокрутки.', 'Координаты по вертикали, от левого края вьюпорта до начала документа.', 'Нет', 16),
(121, 'childNodes', 8, '13', 'Возвращает NodeList дочерних элементов. Возвращаются не только элементы, но и комментарии, и текст.', 'Возвращает только дочерние элемнеты. Вложенности 1 уровня.', 'Возвращает первый дочерний элемент. Если такого нет, возвращает null.', 'Нет', 12),
(122, 'children', 8, '13', 'Возвращает только дочерние элемнеты. Вложенности 1 уровня.', 'Возвращает NodeList дочерних элементов. Возвращаются не только элементы, но и комментарии, и текст.', 'Возвращает первый дочерний элемент. Если такого нет, возвращает null.', 'Нет', 11),
(123, 'firstElementChild', 8, '13', 'Возвращает первый дочерний элемент. Если такого нет, возвращает null.', 'Возвращает последний дочерный элемент. Если такого нет, возвращает null.', 'Возвращает ближайший родительский элемент (или сам элемент), который соответствует заданному в аргументе CSS-селектору или null, если таковых элементов вообще нет.', 'Нет', 10),
(124, 'lastElementChild', 8, '13', 'Возвращает последний дочерный элемент. Если такого нет, возвращает null.', 'Возвращает первый дочерний элемент. Если такого нет, возвращает null.', 'Возвращает одноуровнеый по вложенности элемент, находящийся после элемента, к которому пременено свойство. Если указанный элемент последний в списке, то возвращает null', 'Нет', 10),
(125, 'parentNode', 8, '13', 'Возвращает родительский узел. Если родителя нет, либо родитель не является элементом, то свойство вернет null.', 'Возвращает дочерний узел. Если его нет, либо он не является элементом, то свойство вернет null.', 'Возвращает одноуровневый по вложенности элемент, находящийся после элемента, к которому пременено свойство. Если указанный элемент последний в списке, то возвращает null', 'Нет', 10),
(126, 'parentElement', 8, '13', 'Возвращает родительский элемент. Если родителя нет, либо родитель не является элементом, то свойство вернет null ', 'Возвращает дочерний элемент. Если его нет, либо он не является элементом, то свойство вернет null ', 'Возвращает одноуровневый по вложенности элемент, находящийся после элемента, к которому пременено свойство. Если указанный элемент последний в списке, то возвращает null', 'Нет', 10),
(127, 'closest', 8, '18', 'Возвращает ближайший родительский элемент (или сам элемент), который соответствует заданному в аргументе CSS-селектору или null, если таковых элементов вообще нет.', 'Возвращает дочерний элемент. Если его нет, либо он не является элементом, то свойство вернет null ', 'Возвращает одноуровнеый по вложенности элемент, находящийся после элемента, к которому пременено свойство. Если указанный элемент последний в списке, то возвращает null', 'Нет', 10),
(128, 'previousElementSibling', 8, '13', 'Возвращает одноуровневый по вложенности элемент, находящийся перед элементом, к которому пременено свойство. Если указанный элемент первый в списке, то возвращает null', 'Возвращает одноуровневый по вложенности элемент, находящийся после элемента, к которому пременено свойство. Если указанный элемент последний в списке, то возвращает null', 'Возвращает только дочерние элемнеты. Вложенности 1 уровня.', 'Нет', 10),
(129, 'nextElementSibling', 8, '13', 'Возвращает одноуровневый по вложенности элемент, находящийся после элемента, к которому пременено свойство. Если указанный элемент последний в списке, то возвращает null', 'Возвращает одноуровневый по вложенности элемент, находящийся перед элементом, к которому пременено свойство. Если указанный элемент первый в списке, то возвращает null', 'Возвращает только дочерние элемнеты. Вложенности 1 уровня.', 'Нет', 10),
(130, 'remove', 8, '13', 'Удаляет элемент из DOM', 'Переносит элемент через другой ниже по DOM', 'Переносит элемент через другой выше по DOM', 'Да', 16),
(131, 'innerHTML', 8, '13', 'Позволяет получить HTML-содержимое элемента в виде строки. Так же свойство сожет менять сождержимое. ', 'Переносит элемент через другой ниже по DOM', 'Удаляет элемент из DOM', 'Да', 7),
(132, 'blur', 8, '13', 'Снимает фокус с элемента. Порождает событие blur, которое мжно обработать с помощью лиссенера.', 'Добавляет на элемент визуальный эфект размытости', 'получает и устанавливает инлайновые стили элемента', 'Нет', 16),
(133, 'style', 8, '13', 'Получает и устанавливает инлайновые стили элемента', 'Добавляет на элемент визуальный эфект размытости', 'Предоставляет все значения CSS-свойств элементов после применения текущей таблицы стилей или базового расчёта каких-либо значений, которые могут быть.', 'Да', 7),
(134, 'getComputedStyle', 8, '9', 'Предоставляет все значения CSS-свойств элементов после применения текущей таблицы стилей или базового расчёта каких-либо значений, которые могут быть.', 'получает и устанавливает инлайновые стили элемента', 'возвращает объект DOMRect, который содержит размеры элемента и его положение относительно видимой области просмотра.', 'Нет', 3),
(135, 'setAttribute', 8, '18, 15', 'Добавляет новый атрибут или изменяет значение существующего атрибута у выбранного элемента', 'Проверка наличилия указанного класса ', 'Предоставляет все значения CSS-свойств элементов после применения текущей таблицы стилей или базового расчёта каких-либо значений, которые могут быть.', 'Да', 16),
(136, 'classList.contains', 8, '18', 'Проверка наличилия указанного класса ', 'Добавляет новый атрибут или изменяет значение существующего атрибута у выбранного элемента', 'Удалить класс, если он уже есть, либо добавить, если такого класса нет. ', 'Нет', 9),
(137, 'scrollTo', 8, '15, 16', 'Прокрутка документа до указанных координат. Координаты указываются в пикселях, можно настроить анимацию прокрутки.', 'Прокрутка окна до элемента, к которому вызван метод. Можно указать до какой границы элемента необходима прокрутка, а так же настроить анимацию прокрутки и выравнивание. ', 'Координаты по вертикали, от левого края вьюпорта до начала документа.', 'Нет', 16),
(138, 'getBoundingClientRect', 8, '13', 'возвращает объект DOMRect, который содержит размеры элемента и его положение относительно видимой области просмотра.', 'Проверка наличилия указанного класса ', 'Предоставляет все значения CSS-свойств элементов после применения текущей таблицы стилей или базового расчёта каких-либо значений, которые могут быть.', 'Нет', 12),
(139, 'window.pageXOffset', 8, '13', 'Координаты по горизонтали, от верха вьюпорта до начала документа.', 'Координаты по вертикали, от левого края вьюпорта до начала документа.', 'Высота элемента', 'Нет', 8),
(140, 'window.pageYOffset', 8, '13', 'Координаты по вертикали, от левого края вьюпорта до начала документа.', 'Координаты по горизонтали, от верха вьюпорта до начала документа.', 'Длинна элемента', 'Нет', 8),
(141, 'size', 9, '13', 'Количество элементов или пар ключ-значение.', 'Проверка на наличие элемента в set. ', 'Добавление елемента в set. ', 'Нет', 8),
(142, 'has(set)', 9, '2', 'Проверка на наличие элемента в set. ', 'Количество элементов или пар ключ-значение.', 'Добавление елемента в set. ', 'Нет', 9),
(143, 'add', 9, '2', 'Добавление элемента в set. ', 'Удаление всех элементов из set или map.', 'Количество элементов или пар ключ-значение.', 'Да', 14),
(144, 'delete(set)', 9, '2', 'Удаление элемента из set. Метод принимает один аргумент — значение, которое нужно удалить. Возвращает true, елси значение было найдено в коллекции и удалено, либо false, если значения нет в коллекции.', 'Удаление всех элементов из set или map.', 'Количество элементов или пар ключ-значение.', 'Да', 9),
(145, 'clear', 9, '13', 'Удаление всех элементов из set или map.', 'Удаление пары ключ/значение по ключу. Возвращает true, елси значение было найдено в коллекции и удалено, либо false, если значения нет в коллекции.', 'Удаление элемента из set. Метод принимает один аргумент — значение, которое нужно удалить. Возвращает true, елси значение было найдено в коллекции и удалено, либо false, если значения нет в коллекции.', 'Да', 16);
INSERT INTO `subject` (`id`, `name`, `id_category`, `id_args`, `true_description`, `false_description_1`, `false_description_2`, `change_start_data`, `id_outputVariant`) VALUES
(146, 'get', 9, '2', 'Получение значения по ключу, обязательно в аргументе указывать тот же тип ключа, что и при установке', 'Проверка на наличие элемента в map, проверка происходит по ключу. Возвращает true, если ключ присутствует в коллекции, иначе false ', 'Добавление елемента в set или map. ', 'Нет', 9),
(147, 'has(map)', 9, '2', 'Проверка на наличие элемента в map, проверка происходит по ключу. Возвращает true, если ключ присутствует в коллекции, иначе false ', 'Получение значения по ключу, обязательно в аргументе указывать тот же тип ключа, что и при установке', 'Проверка на наличие элемента в map, проверка происходит по значению. Возвращает true, если значение присутствует в коллекции, иначе false ', 'Нет', 9),
(148, 'delete(map)', 9, '2', 'Удаление пары ключ/значение по ключу. Возвращает true, елси значение было найдено в коллекции и удалено, либо false, если значения нет в коллекции.', 'Удаление всех элементов из set или map.', 'Удаление пары ключ-значение по значению. Если таких пар несколько, удаляет все пары. ', 'Да', 9),
(149, 'keys', 9, '13', 'Возвращает ключи map.', 'Количество элементов или пар ключ-значение.', 'Получение значения по ключу, обязательно в аргументе указывать тот же тип ключа, что и при установке', 'Нет', 9),
(150, 'values', 9, '13', 'Возвращает значения map', 'Возвращает ключи map.', 'Количество элементов или пар ключ-значение.', 'Нет', 9),
(151, 'call', 10, '2', 'вызывает функцию с определенным значением this и списком аргументов, указанным через запятую.', 'вызывает функцию с определенным значением this и массивом аргументов', 'создает новую функцию с привязанным значением this и списком аргументов, указанным через запятую.', 'Нет', 16),
(152, 'apply', 10, '2', 'вызывает функцию с определенным значением this и массивом аргументов', 'вызывает функцию с определенным значением this и списком аргументов, указанным через запятую.', 'создает новую функцию с привязанным значением this и списком аргументов, указанным через запятую.', 'Нет', 16),
(153, 'bind', 10, '2', 'создает новую функцию с привязанным значением this и списком аргументов, указанным через запятую.', 'вызывает функцию с определенным значением this и списком аргументов, указанным через запятую.', 'вызывает функцию с определенным значением this и массивом аргументов', 'Нет', 16),
(154, 'localStorage.setItem', 11, '2', 'Сохранить пару ключ/значение. При этом значения конвертируются в строку.', 'Удаление пары ключ/значение по ключу. ', 'Получение значения по ключу.', 'Да', 16),
(155, 'localStorage.removeItem', 11, '2', 'Удаление пары ключ/значение по ключу. ', 'Сохранить пару ключ/значение', 'Удаление всех элементов хранилища.', 'Да', 16),
(156, 'localStorage.getItem', 11, '2', 'Получение значения по ключу.', 'Количество пар ключ-значение.', 'Сохранить пару ключ/значение', 'Нет', 7),
(157, 'localStorage.clear', 11, '13', 'Удаление всех элементов хранилища.', 'Удаление пары ключ/значение по ключу. ', 'Сохранить пару ключ/значение', 'Да', 16),
(158, 'localStorage.key', 11, '10', 'Получение ключа по индексу. ', 'Получение значения по ключу.', 'Количество пар ключ-значение.', 'Нет', 7),
(159, 'localStorage.length', 11, '13', 'Количество пар ключ-значение.', 'Количество символов у переданного ключа', 'Получение значения по ключу.', 'Нет', 8);

-- --------------------------------------------------------

--
-- Структура таблицы `trainer_section`
--

CREATE TABLE `trainer_section` (
  `id` int(11) NOT NULL,
  `section_name` varchar(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `trainer_section`
--

INSERT INTO `trainer_section` (`id`, `section_name`) VALUES
(1, 'JavaScript'),
(2, 'HTML'),
(3, 'CSS'),
(4, 'React'),
(5, 'Git');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(30) NOT NULL,
  `login` varchar(30) NOT NULL,
  `password` varchar(100) NOT NULL,
  `id_hash` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `login`, `password`, `id_hash`) VALUES
(1, 'admin', '32e4b9270cb649373ea322491943cb55', 'c4ca4238a0b923820dcc509a6f75849b'),
(2, 'test1', '81dc9bdb52d04dc20036dbd8313ed055', 'c81e728d9d4c2f636f067f89cc14862c');

-- --------------------------------------------------------

--
-- Структура таблицы `user_progress`
--

CREATE TABLE `user_progress` (
  `id` int(11) NOT NULL,
  `id_subject` int(11) NOT NULL,
  `progress_now` text NOT NULL,
  `login` varchar(30) NOT NULL,
  `solved_count` int(11) NOT NULL,
  `failed_count` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `user_progress`
--

INSERT INTO `user_progress` (`id`, `id_subject`, `progress_now`, `login`, `solved_count`, `failed_count`) VALUES
(1, 1, 'solved', 'admin ', 12, 2),
(2, 2, 'solved', 'admin ', 2, 1),
(3, 3, 'failed', 'test1', 0, 1),
(4, 4, 'failed', 'test1', 1, 2),
(5, 5, 'solved', 'admin ', 2, 0),
(10, 7, 'failed', 'admin', 1, 1);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `args`
--
ALTER TABLE `args`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Индексы таблицы `category`
--
ALTER TABLE `category`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`),
  ADD KEY `id_2` (`id`),
  ADD KEY `id_section` (`id_section`),
  ADD KEY `output_ids` (`output_ids`);

--
-- Индексы таблицы `outputvariant`
--
ALTER TABLE `outputvariant`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Индексы таблицы `questions`
--
ALTER TABLE `questions`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Индексы таблицы `subject`
--
ALTER TABLE `subject`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `trainer_section`
--
ALTER TABLE `trainer_section`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `user_progress`
--
ALTER TABLE `user_progress`
  ADD PRIMARY KEY (`id`),
  ADD KEY `id` (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `subject`
--
ALTER TABLE `subject`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=160;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(30) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT для таблицы `user_progress`
--
ALTER TABLE `user_progress`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
